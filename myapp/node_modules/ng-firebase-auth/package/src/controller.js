'use strict';

/**
 * @ngInject
 */
module.exports = function($scope) {

  var Firebase = $scope.firebase;

  /**
   * @desc Reference to controller
   * @type {Object}
   */
  var vm = this;

  /**
   * @desc Authenticate user with provider
   * @param {String} provider Name of provider to use for authentication
   * @return {Object} @this
   */
  vm.onAuthButtonClick = function(provider) {
    Firebase.auth
      .$authWithOAuthPopup(provider)
      .then(vm.onAuthentication)
      .catch(vm.onAuthenticationFailure);
    return vm;
  };

  /**
   * @desc Handle authentication approval
   * @param {Object} authData
   */
  vm.onAuthentication = function(authData) {
    // Log in to Firebase
    Firebase.ref
      .authWithCustomToken(authData.token, vm.onFirebaseAuth);

    return console.log("Logged in as:", authData.uid);
  };

  /**
   * @desc Handle successful authentication with Firebase
   * @param {Error} error
   * @param {Object} authData
   */
  vm.onFirebaseAuth = function(error, authData) {
    if (error) {
      return vm.onFirebaseAuthError(error);
    }
    return console.log('Sucessfully logged into Firebase', authData);
  };

  /**
   * @desc Handle authentication failure
   * @param {Object} authData
   */
  vm.onAuthenticationFailure = function(error) {
    return console.error("Authentication failed: ", error);
  };

  return vm;
};
